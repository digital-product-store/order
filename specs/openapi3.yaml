openapi: 3.0.3
info:
  title: Order Service API
  description: |-
    Helps user to create a cart, order and pay
  contact:
    email: baris@dev.local
  version: 0.1.0
tags:
  - name: health
    description: Service healthiness
  - name: cart
    description: Cart endpoints
  - name: order
    description: Order endpoints
  - name: private
    description: Private endpoints
paths:
  /_health:
    get:
      tags:
        - health
      operationId: health
      responses:
        '200':
          description: service is working properly
        '503':
          description: service is not working properly
  /api/v1/cart:
    get:
      tags:
        - cart
      operationId: get_cart
      parameters:
        - name: x-user-id
          in: header
          description: user uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user's cart
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItem'
    post:
      tags:
        - cart
      operationId: update_cart
      parameters:
        - name: x-user-id
          in: header
          description: user uuid
          required: true
          schema:
            type: string
      requestBody:
        description: item ids needs to be placed in cart
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        '201':
          description: successfully updated
        '404':
          description: item not found
    delete:
      tags:
        - cart
      operationId: clear_cart
      parameters:
        - name: x-user-id
          in: header
          description: user uuid
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successfully cleared
  /api/v1/cart/checkout:
    post:
      tags:
        - cart
      operationId: checkout_cart
      parameters:
        - name: x-user-id
          in: header
          description: user uuid
          required: true
          schema:
            type: string
      requestBody:
        description: card info for payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardInfo'
        required: true
      responses:
        '200':
          description: successfully paid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/v1/orders:
    get:
      tags:
        - order
      operationId: list_orders
      parameters:
        - name: x-user-id
          in: header
          description: user uuid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: listing orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '404':
          description: not found
  /_private/api/v1/orders/{uuid}:
    get:
      tags:
        - private
      operationId: get order detail
      parameters:
        - name: uuid
          in: path
          description: order key id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: order detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    CartItem:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: float
      required:
        - id
        - name
        - price
    CardInfo:
      type: object
      properties:
        number:
          type: string
        exp_date:
          type: string
        cvv:
          type: string
      required:
        - number
        - exp_date
        - cvv
    Order:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        payment_id:
          type: string
        total:
          type: number
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
      required:
        - id
        - status
        - total
        - items